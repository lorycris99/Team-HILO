Slide 16: Nella parte di System Design del progetto ci siamo focalizzati su tre macro-attività: Design Goals, compromessi di design e decomposizione in sottosistemi. Partiamo dai design goals.

Slide 17: Gli obiettivi principali del sistema si possono elencare in 5 categorie che sono performance, manutenibiulità, usabilità, affidabilità e costi. Per quanto riguarda le performance il sistema deve garantire tempi di risposta minimi e deve utilizzare la minor quantità di memoria possibile. Per quanto riguarda la manutenibilità il sistema deve essere strutturato in modo da poter essere riadattato a domini applicativi differenti e da poter essere manutenuto da futuri nuovi sviluppatori. Il sistema inoltre deve essere usabile, ovvero facilmente comprensibile dagli utenti per massimizzare l'efficienza delle interazioni. Ovviamente il sistema dovrà essere affidabile e quindi deve essere a prova di utenti naive che sono soliti fare errori e deve, per quanto possibile, fault tolerance. Per quanto riguarda i costi sono stimate 200 ore di lavoro complessivo

Slide 18: Ovviamente non si può garantire ogni aspetto e per questo motivo sono necessari dei compromessi di progettazione. Il sistema deve essere usabile a discapito delle funzionalità dal momento che è più importante fare poche cose ma buone. Dal momento che il sistema verrà adoperato in ambito medico c'è bisogno che il sistema sia il più robusto possibile poichè un comportamento scorretto potrebbe avere impatti seri su medici e pazienti che interagiscono con il sistema. Inoltre si preferirà un sistema efficiente piuttosto che portabile dal momento che tempi di risposta minimi ed elaborazioni efficienti trasmettono una sensazione di affidabilità agli utenti

Slide 19: Dal momento che non esiste un vero e proprio sistema legacy da riutilizzare abbiamo optato per un contenimento dei costi. Per quanto riguarda l'affidabilità si preferisce un sistema che minimizzi le condizioni di errore a discapito della velocità di risposta in caso di situazioni "complicate". Infine, in base alla deadline e ai costi di sviluppo si preferisce uno sviluppo rapido tralasciando le funzionalità ritenute non essenziali

Slide 20: Come già anticipato, non esiste un vero e proprio sistema corrente. In Campania, la Regione ha sviluppato una piattaforma chiamata SINFONIA la quale si limita solo alla comunicazione degli esiti dei tamponi. Quello che vogliamo proporre noi invece va oltre questo e vuole essere un vero e proprio supporto agli operatori sanitari coinvolti nell'analisi dei tamponi nonchè alle persone che li devono effettuare.

Slide 21: Questo sistema sarà composto da 12 sottosistemi che saranno disposti su layer differenti secondo il pattern architetturale MVC (Model, View, Controller) come si può notare anche dal component diagram del sistema

Slide 22: Per interagire con il sistema gli utenti avranno necessità solo di un browser capace di interpretare codice JavaScript e con accesso ad internet. Il sistema sarà installato su una macchina server sulla quale sarà attivo un web server capace di servire richieste HTTPS e di interagire con un DBMS relazionale che consentirà l'accesso ai dati persistenti

Slide 23: La base di dati rispetta questo schema concettuale ristrutturato.

Slide 24: Per quanto riguarda invece la sicurezza, i ruoli assegnati agli utenti identificheranno le operazioni lecite e le risorse a cui hanno accesso. Da notare la scelta di non fornire accesso ai dati relativi ai tamponi e alle cartelle cliniche all'amministratore in quanto non è detto che quest'ultimo sia un medico e che quindi abbia prestato il giuramento di Ippocrate. 